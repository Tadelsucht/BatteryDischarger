<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MoreThanOneBatteryWasDetectedWhichIsNotSupportedByTheProgram" xml:space="preserve">
    <value>检测到一个以上的电池，这不被程序所支持。</value>
  </data>
  <data name="NoBatteryWasDetected" xml:space="preserve">
    <value>没有检测到电池。</value>
  </data>
  <data name="StartControlledDischarge" xml:space="preserve">
    <value>开始控制放电</value>
  </data>
  <data name="TargetBatteryChargeInPercent" xml:space="preserve">
    <value>目标电池电量（百分比）。</value>
  </data>
  <data name="TheBatteryStatusCouldNotBeDetermined" xml:space="preserve">
    <value>无法确定电池状态。</value>
  </data>
  <data name="StopControlledDischarge" xml:space="preserve">
    <value>停止控制性排放</value>
  </data>
  <data name="AccelerateBatteryDischarge" xml:space="preserve">
    <value>加速电池放电。</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>误差</value>
  </data>
  <data name="DidNotFoundAUseableWorkingDirectoryPath" xml:space="preserve">
    <value>没有找到可用的工作目录路径。</value>
  </data>
  <data name="LanguageColon" xml:space="preserve">
    <value>语言。</value>
  </data>
  <data name="LegalNotice" xml:space="preserve">
    <value>法律通知</value>
  </data>
  <data name="TheOperatingSystemIsNotSupported" xml:space="preserve">
    <value>该操作系统不被支持。</value>
  </data>
  <data name="StructureOfTheSpecifiedLicenseCodeIsNotCorrect" xml:space="preserve">
    <value>指定的许可证代码的结构不正确。</value>
  </data>
  <data name="TheLicenseCodeIsNotValid" xml:space="preserve">
    <value>许可证代码是无效的。</value>
  </data>
  <data name="TheProgramCanBeUsedOnlyAfterAValidLicenseCodeHasBeenEntered" xml:space="preserve">
    <value>只有在输入了有效的许可证代码后，才能使用该程序。</value>
  </data>
  <data name="CheckCorrect" xml:space="preserve">
    <value>✔</value>
  </data>
  <data name="CheckIncorrect" xml:space="preserve">
    <value>❌</value>
  </data>
  <data name="LicenseCodeColon" xml:space="preserve">
    <value>许可证代码。</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>核实</value>
  </data>
  <data name="NumberOfMinutesUntilTheSelectedBatteryLevelIsReached" xml:space="preserve">
    <value>达到选定的电池水平之前的分钟数。</value>
  </data>
  <data name="ActionAtTheSelectedBatteryChargeLevel" xml:space="preserve">
    <value>当达到选定的电池水平时采取行动。</value>
  </data>
  <data name="CurrentBatteryChargeInPercent" xml:space="preserve">
    <value>当前的电池电量，以百分比表示。</value>
  </data>
  <data name="ShutDownDevice" xml:space="preserve">
    <value>关闭机器</value>
  </data>
  <data name="HibernateDevice" xml:space="preserve">
    <value>休眠设备</value>
  </data>
  <data name="SetDeviceToPowerSavingMode" xml:space="preserve">
    <value>将设备设置为省电模式</value>
  </data>
  <data name="TheDeviceMayStillBeChargingOrTheBatteryStatusCouldNotBeDetermined" xml:space="preserve">
    <value>设备可能仍在充电或无法确定电池状态。
不过，受控的电池放电过程还是正常进行的。</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="PreventUnwantedSystemSleepMode" xml:space="preserve">
    <value>防止不必要的系统休眠:</value>
  </data>
</root>